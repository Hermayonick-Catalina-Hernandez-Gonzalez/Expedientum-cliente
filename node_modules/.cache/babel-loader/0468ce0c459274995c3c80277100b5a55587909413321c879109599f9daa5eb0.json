{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\herca\\\\OneDrive\\\\Documentos\\\\luisRoberto\\\\Proyecto Chaparrito\\\\Expedientum-cliente\\\\src\\\\Components\\\\Usuarios\\\\AddUser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddUser.css';\nimport pageLogo from '../assets/logo.png';\nimport logoutIcon from '../assets/cerrar.png';\nimport { AuthContext } from '../../context/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUser = () => {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState(''); // Campo para confirmar la contraseña\n  const [nombre, setNombre] = useState('');\n  const [apellidos, setApellidos] = useState('');\n  const [genero, setGenero] = useState('');\n  const [fechaNacimiento, setFechaNacimiento] = useState('');\n  const [email, setEmail] = useState('');\n  const [tipoUsuario, setTipoUsuario] = useState('');\n  const [id_departamento, setIdDepartamento] = useState(''); // Actualización de departamento a id_departamento\n\n  const userData = {\n    username,\n    password,\n    password_confirmation: confirmPassword,\n    // Enviar la confirmación de la contraseña\n    nombre,\n    apellidos,\n    genero,\n    fechaNacimiento,\n    email,\n    tipoUsuario,\n    id_departamento\n  };\n  const handleBack = () => {\n    navigate('/users');\n  };\n  const handleRegister = async () => {\n    console.log('Intentando registrar usuario con los siguientes datos:', userData);\n    try {\n      const response = await fetch('http://localhost:8000/api/usuarios', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      console.log('Respuesta del servidor:', data);\n      if (response.ok) {\n        console.log('Usuario registrado:', data);\n        // Limpiar el formulario\n        setUsername('');\n        setPassword('');\n        setConfirmPassword(''); // Limpiar confirmación de contraseña\n        setNombre('');\n        setApellidos('');\n        setGenero('');\n        setFechaNacimiento('');\n        setEmail('');\n        setTipoUsuario('');\n        setIdDepartamento(''); // Limpiar id_departamento\n        navigate('/users');\n      } else {\n        console.error('Error al registrar usuario:', data);\n      }\n    } catch (error) {\n      console.error('Hubo un error con la solicitud:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirmar Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(AddUser, \"+OxLN9QxR9p5v2fYC9hRbYKnusM=\", false, function () {\n  return [useNavigate];\n});\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","pageLogo","logoutIcon","AuthContext","jsxDEV","_jsxDEV","AddUser","_s","token","navigate","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","nombre","setNombre","apellidos","setApellidos","genero","setGenero","fechaNacimiento","setFechaNacimiento","email","setEmail","tipoUsuario","setTipoUsuario","id_departamento","setIdDepartamento","userData","password_confirmation","handleBack","handleRegister","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","className","children","type","placeholder","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/herca/OneDrive/Documentos/luisRoberto/Proyecto Chaparrito/Expedientum-cliente/src/Components/Usuarios/AddUser.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AddUser.css';\r\nimport pageLogo from '../assets/logo.png';\r\nimport logoutIcon from '../assets/cerrar.png';\r\nimport { AuthContext } from '../../context/context';\r\n\r\nconst AddUser = () => {\r\n    const { token } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState(''); // Campo para confirmar la contraseña\r\n    const [nombre, setNombre] = useState('');\r\n    const [apellidos, setApellidos] = useState('');\r\n    const [genero, setGenero] = useState('');\r\n    const [fechaNacimiento, setFechaNacimiento] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [tipoUsuario, setTipoUsuario] = useState('');\r\n    const [id_departamento, setIdDepartamento] = useState(''); // Actualización de departamento a id_departamento\r\n\r\n    const userData = {\r\n        username,\r\n        password,\r\n        password_confirmation: confirmPassword, // Enviar la confirmación de la contraseña\r\n        nombre,\r\n        apellidos,\r\n        genero,\r\n        fechaNacimiento,\r\n        email,\r\n        tipoUsuario,\r\n        id_departamento\r\n    };\r\n\r\n    const handleBack = () => {\r\n        navigate('/users');\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n        console.log('Intentando registrar usuario con los siguientes datos:', userData);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8000/api/usuarios', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify(userData),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            console.log('Respuesta del servidor:', data);\r\n\r\n            if (response.ok) {\r\n                console.log('Usuario registrado:', data);\r\n                // Limpiar el formulario\r\n                setUsername('');\r\n                setPassword('');\r\n                setConfirmPassword(''); // Limpiar confirmación de contraseña\r\n                setNombre('');\r\n                setApellidos('');\r\n                setGenero('');\r\n                setFechaNacimiento('');\r\n                setEmail('');\r\n                setTipoUsuario('');\r\n                setIdDepartamento(''); // Limpiar id_departamento\r\n                navigate('/users');\r\n            } else {\r\n                console.error('Error al registrar usuario:', data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Hubo un error con la solicitud:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            {/* Resto del código del componente */}\r\n            <input \r\n                type=\"password\" \r\n                placeholder=\"Confirmar Password\" \r\n                value={confirmPassword} \r\n                onChange={(e) => setConfirmPassword(e.target.value)} \r\n                required \r\n            />\r\n            {/* Resto del código del componente */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddUser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}